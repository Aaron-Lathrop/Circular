service cloud.firestore {
  match /databases/{database}/documents {

    // ##########################
    // ##### GENERAL UTILS ######

    // current user object
    function currentUser() {
      return request.auth.uid;
    }

    // get requesting users data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }

    // incoming data object
    function incomingData() {
      return request.resource.data;
    }

    // ##### GENERAL UTILS ######
    // ##########################

    // check if user is signed in
    function signedIn() {
    	return currentUser() != null;
    }

    // Is current user the campaign admin of currently selected campaign?
    function isAdmin(campaignId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.createdCampaignId == campaignId;
    }

    // check if user exists
    function userExists(userId) {
      return exists(/databases/$(database)/documents/users/$(userId))
    }

    // check if email exists in users collection
    function emailExists() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == incomingData().email
    }

    // check if user is admin of requested campaign
    function userIsAdminOfRequestedCampaign() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.createdCampaignId == incomingData().signedCampaignId;
    }

    // check if request is made by campaign owner
    // need more robust rules here
    function isCampaignOwner() {
      return getUserData().createdCampaignId != null;
    }

    // check if it's the user's own data
    function isUsersData(userId) {
      return currentUser().uid == userId
    }

    match /wasteProviders/{wasteProvider} {
      allow read: if true;
      allow write: if signedIn();
    }

    match /campaigns/{campaignId} {
      allow read: if true;

      // Only authenticated users can create a campaign and only one campaign
      allow create: if signedIn()
                    && currentUser().data.createdCampaignId == null;

      // Only authenticated users and campaign owner can update campaign
      allow update: if signedIn()
                    && isAdmin(campaignId);

      match /signatures/{signatureId} {
        allow read, create: if true;
        allow delete: if signedIn() && isUsersData(signatureId)
      }
    }

    match /users/{userId} {
      // no one can read user data - signature user data is stored in campaigns/signatures
      allow create: if signedIn() && !userExists(userId) || signedIn() && !emailExists() && userIsAdminOfRequestedCampaign()
      allow update: if signedIn() && isUsersData(userId)
      allow read: if signedIn() && isUsersData(userId)
    }
  }
}
